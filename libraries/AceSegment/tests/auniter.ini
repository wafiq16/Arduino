# ----------------------------------------------------------------------------
# Configuration file for https://github.com/bxparks/AUniter which provides a
# convenient command line wrapper around the Arduino IDE or Arduino CLI.
#
# These are the hardware platforms which have been validated for this library.
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
# AUniter top level configs.
#
# Recognized parameters:
#   * monitor
#   * port_timeout (default 120)
#   * baud (default 115200)
# ----------------------------------------------------------------------------

[auniter]
  monitor = picocom -b $baud --omap crlf --imap lfcrlf --echo $port
#  monitor = microcom -s $baud -p $port

# ----------------------------------------------------------------------------
# Board aliases
# ----------------------------------------------------------------------------

[boards]
# "ATtiny85 No bootloader"
  attiny85 = ATTinyCore:avr:attinyx5:LTO=enable,TimerClockSource=default,chip=85,clock=8internal,eesave=aenable,bod=disable,millis=enabled
# "Arduino/Genuino Uno"
  uno = arduino:avr:uno
# "Arduino Nano ATmega328P (Old Bootloader)"
  nano = arduino:avr:nano:cpu=atmega328old
# "SparkFun Pro Micro" 16MHz
  promicro16 = SparkFun:avr:promicro:cpu=16MHzatmega32U4
# "Arduino/Genuino Mega or Mega2560"
  mega = arduino:avr:mega:cpu=atmega2560
# "SparkFun SAMD21 Mini Breakout"
  samd = SparkFun:samd:samd21_mini
# "Arduino MKR1000"
  mkr1000 = arduino:samd:mkr1000
# STM32 generic blue pill F103C8, using HID bootloader. As noted on many
# websites, many Blue Pill boards come with 128kB of flash instead of
# 64kB, and it seems like my boards support 128kB. So let's define the board to
# be an F103CB not F103C8 ('b' not 'eight') to get access to that 128kB.
  stm32 = STM32:stm32:GenF1:pnum=BLUEPILL_F103CB,upload_method=hidMethod,xserial=generic,usb=CDCgen,xusb=FS,opt=osstd,rtlib=nano
# "NodeMCU 1.0 (ESP-12E)" for generic ESP8266 module
  nodemcuv2 = esp8266:esp8266:nodemcuv2:xtal=80,vt=flash,exception=disabled,ssl=all,eesz=4M2M,led=2,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=921600
# "ESP32 Dev Module" for EzSBC ESP32 board
  esp32 = esp32:esp32:esp32:PSRAM=disabled,PartitionScheme=default,CPUFreq=240,FlashMode=qio,FlashFreq=80,FlashSize=4M,UploadSpeed=921600,DebugLevel=none
# Teensy 3.2
  teensy32 = teensy:avr:teensy31:usb=serial,speed=96,opt=o2std,keys=en-us

# ----------------------------------------------------------------------------
# Environments. Valid parameters of the [env:{environment}] section:
#
# board = {alias} - board alias from [boards] action
# locking = (true | false) - whether to use flock to lock the /dev/tty port
# exclude = egrep regular expression of files to exclude. Multiple files can be
#     specified using the '(a|b)' pattern supported by egrep.
# preprocessor = flags for the C-preprocessor, e.g. '-D {macro=value}' flags
# ----------------------------------------------------------------------------

[env:attiny]
  board = attiny85
  preprocessor = -D AUNITER_ATTINY

[env:uno]
  board = uno

[env:nano]
  board = nano

[env:micro]
  board = promicro16
  locking = false

[env:mega]
  board = mega

[env:samd]
  board = samd
  locking = false

[env:mkr1000]
  board = mkr1000
  locking = false

[env:stm32]
  board = stm32
  locking = false

[env:nodemcu]
  board = nodemcuv2

[env:esp32]
  board = esp32

[env:teensy32]
  board = teensy32
